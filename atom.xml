<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Symbol Crash</title>
  
  <subtitle>不学无术</subtitle>
  <link href="https://yngty.github.io/atom.xml" rel="self"/>
  
  <link href="https://yngty.github.io/"/>
  <updated>2023-07-20T07:03:39.354Z</updated>
  <id>https://yngty.github.io/</id>
  
  <author>
    <name>yngty</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>http协议</title>
    <link href="https://yngty.github.io/2023/07/17/http%E5%8D%8F%E8%AE%AE/"/>
    <id>https://yngty.github.io/2023/07/17/http%E5%8D%8F%E8%AE%AE/</id>
    <published>2023-07-17T11:42:24.000Z</published>
    <updated>2023-07-20T07:03:39.354Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;URI-的完整图解&quot;&gt;&lt;a href=&quot;#URI-的完整图解&quot; class=&quot;headerlink&quot; title=&quot;URI 的完整图解&quot;&gt;&lt;/a&gt;URI 的完整图解&lt;/h1&gt;&lt;figure class=&quot;highlight</summary>
        
      
    
    
    
    
    <category term="HTTP" scheme="https://yngty.github.io/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>可变参数模板</title>
    <link href="https://yngty.github.io/2023/04/10/c++/%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0%E6%A8%A1%E6%9D%BF/"/>
    <id>https://yngty.github.io/2023/04/10/c++/%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0%E6%A8%A1%E6%9D%BF/</id>
    <published>2023-04-10T10:21:36.000Z</published>
    <updated>2023-07-20T07:03:39.354Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;可变参数模板的需求&quot;&gt;&lt;a href=&quot;#可变参数模板的需求&quot; class=&quot;headerlink&quot; title=&quot;可变参数模板的需求&quot;&gt;&lt;/a&gt;可变参数模板的需求&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;要在模板参数列表中指定一组参数，如</summary>
        
      
    
    
    
    <category term="C/C++" scheme="https://yngty.github.io/categories/C-C/"/>
    
    
    <category term="template" scheme="https://yngty.github.io/tags/template/"/>
    
  </entry>
  
  <entry>
    <title>CMake 踩坑记</title>
    <link href="https://yngty.github.io/2023/04/07/cmake/CMake-%E8%B8%A9%E5%9D%91%E8%AE%B0/"/>
    <id>https://yngty.github.io/2023/04/07/cmake/CMake-%E8%B8%A9%E5%9D%91%E8%AE%B0/</id>
    <published>2023-04-07T10:26:10.000Z</published>
    <updated>2023-07-20T07:03:39.354Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;install-CODE-和-execute-process-配合&quot;&gt;&lt;a href=&quot;#install-CODE-和-execute-process-配合&quot; class=&quot;headerlink&quot; title=&quot;install(CODE) 和 execute_process 配合&quot;&gt;&lt;/a&gt;&lt;code&gt;install(CODE)&lt;/code&gt; 和 &lt;code&gt;execute_process&lt;/code&gt; 配合&lt;/h1&gt;&lt;h2 id=&quot;确保-WORKING-DIRECTORY-存在&quot;&gt;&lt;a href=&quot;#确保-WORKING-DIRECTORY-存在&quot; class=&quot;headerlink&quot; title=&quot;确保 WORKING_DIRECTORY 存在&quot;&gt;&lt;/a&gt;确保 &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; 存在&lt;/h2&gt;&lt;p&gt;示例代码: &lt;/p&gt;
&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;(CMAKE_INSTALL_PREFIX &lt;span class=&quot;variable&quot;&gt;$&amp;#123;PROJECT_BINARY_DIR&amp;#125;&lt;/span&gt;/&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt;(CODE &lt;span class=&quot;string&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;    execute_process(COMMAND $&amp;#123;CMAKE_COMMAND&amp;#125; -E make_directory folder &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;    WORKING_DIRECTORY &#92;$&amp;#123;CMAKE_INSTALL_PREFIX&amp;#125;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;    &amp;quot;&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;注意确保 &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; 存在，可能执行这段代码时还没有 &lt;code&gt;install target&lt;/code&gt; 导致 &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; 还没有生成。&lt;/p&gt;</summary>
    
    
    
    
    <category term="CMake" scheme="https://yngty.github.io/tags/CMake/"/>
    
  </entry>
  
  <entry>
    <title>存储和加载指令</title>
    <link href="https://yngty.github.io/2023/03/18/macos/%E5%AD%98%E5%82%A8%E5%92%8C%E5%8A%A0%E8%BD%BD%E6%8C%87%E4%BB%A4/"/>
    <id>https://yngty.github.io/2023/03/18/macos/%E5%AD%98%E5%82%A8%E5%92%8C%E5%8A%A0%E8%BD%BD%E6%8C%87%E4%BB%A4/</id>
    <published>2023-03-18T23:19:19.000Z</published>
    <updated>2023-07-20T07:03:39.354Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;存储和加载指令&quot;&gt;&lt;a href=&quot;#存储和加载指令&quot; class=&quot;headerlink&quot; title=&quot;存储和加载指令&quot;&gt;&lt;/a&gt;存储和加载指令&lt;/h3&gt;&lt;h4 id=&quot;ldr-指令寻址之1：-地址偏移模式-unsigned-offset&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="汇编" scheme="https://yngty.github.io/categories/%E6%B1%87%E7%BC%96/"/>
    
    
    <category term="arm64" scheme="https://yngty.github.io/tags/arm64/"/>
    
  </entry>
  
  <entry>
    <title>ARM64汇编入门</title>
    <link href="https://yngty.github.io/2023/03/18/macos/ARM64%E6%B1%87%E7%BC%96%E5%85%A5%E9%97%A8/"/>
    <id>https://yngty.github.io/2023/03/18/macos/ARM64%E6%B1%87%E7%BC%96%E5%85%A5%E9%97%A8/</id>
    <published>2023-03-18T15:02:42.000Z</published>
    <updated>2023-07-20T07:03:39.354Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;ARM-指令概要介绍&quot;&gt;&lt;a href=&quot;#ARM-指令概要介绍&quot; class=&quot;headerlink&quot; title=&quot;ARM 指令概要介绍&quot;&gt;&lt;/a&gt;&lt;code&gt;ARM&lt;/code&gt; 指令概要介绍&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;A64&lt;/code&gt; 指令集只能运行在 &lt;code&gt;aarch64&lt;/code&gt; 环境中&lt;/li&gt;
&lt;li&gt;所有的A64汇编指令都是 &lt;code&gt;32bits&lt;/code&gt; 宽&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A64&lt;/code&gt; 支持全部是大写或者全部是小写的书写方式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;寄存器名：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;Name&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;Size&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;Encoding&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Wn&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;32 bits&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;0-30&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Genral-purpose register 0-30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Xn&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;64 bits&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;0-30&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Genral-purpose register 0-30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;WZR&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;32 bits&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;31&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Zero register&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;XZR&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;64 bits&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;31&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Zero register&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;WPS&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;32 bits&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;31&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Current stack pointer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;SP&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;64 bits&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;31&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Current stack pointer&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="汇编" scheme="https://yngty.github.io/categories/%E6%B1%87%E7%BC%96/"/>
    
    
    <category term="arm64" scheme="https://yngty.github.io/tags/arm64/"/>
    
  </entry>
  
  <entry>
    <title>enable_shared_from_this的注意事项</title>
    <link href="https://yngty.github.io/2023/03/11/c++/enable-shared-from-this%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <id>https://yngty.github.io/2023/03/11/c++/enable-shared-from-this%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</id>
    <published>2023-03-11T10:09:57.000Z</published>
    <updated>2023-07-20T07:03:39.354Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;使用场景&quot;&gt;&lt;a href=&quot;#使用场景&quot; class=&quot;headerlink&quot; title=&quot;使用场景&quot;&gt;&lt;/a&gt;使用场景&lt;/h1&gt;&lt;p&gt;当我们在对象函数中需要返回或者使用自己的 &lt;code&gt;shared_ptr&lt;/code&gt; 指针时，该怎么办呢？常见的错误写法如下：用不安全的表达式试图获得 &lt;code&gt;this&lt;/code&gt; 的 &lt;code&gt;shared_ptr&lt;/code&gt; 对象, 但可能会导致 &lt;code&gt;this&lt;/code&gt; 被多个互不知晓的所有者析构.&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;Bad&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;std::shared_ptr&amp;lt;Bad&amp;gt; &lt;span class=&quot;title&quot;&gt;getptr&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; std::&lt;span class=&quot;built_in&quot;&gt;shared_ptr&lt;/span&gt;&amp;lt;Bad&amp;gt;(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ~&lt;span class=&quot;built_in&quot;&gt;Bad&lt;/span&gt;() &amp;#123; std::cout &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Bad::~Bad() called&#92;n&amp;quot;&lt;/span&gt;; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    std::shared_ptr&amp;lt;Bad&amp;gt; bp1 = std::&lt;span class=&quot;built_in&quot;&gt;make_shared&lt;/span&gt;&amp;lt;Bad&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    std::shared_ptr&amp;lt;Bad&amp;gt; bp2 = bp1-&amp;gt;&lt;span class=&quot;built_in&quot;&gt;getptr&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    std::cout &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&amp;quot;bp2.use_count() = &amp;quot;&lt;/span&gt; &amp;lt;&amp;lt; bp2.&lt;span class=&quot;built_in&quot;&gt;use_count&lt;/span&gt;() &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;&#92;n&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;comment&quot;&gt;// UB: Bad 对象将会被删除两次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;正确写法是将定义对象公开继承 &lt;code&gt;enable_shared_from_this&lt;/code&gt;: &lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;Good&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; std::enable_shared_from_this&amp;lt;Good&amp;gt; &lt;span class=&quot;comment&quot;&gt;// 注意：继承&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;std::shared_ptr&amp;lt;Good&amp;gt; &lt;span class=&quot;title&quot;&gt;getptr&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;shared_from_this&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="C/C++" scheme="https://yngty.github.io/categories/C-C/"/>
    
    
    <category term="shared_ptr" scheme="https://yngty.github.io/tags/shared-ptr/"/>
    
    <category term="智能指针" scheme="https://yngty.github.io/tags/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>Effective-STL 21：总是让比较函数在等值情况下返回 false</title>
    <link href="https://yngty.github.io/2023/03/10/effective-stl/effective-stl-21/"/>
    <id>https://yngty.github.io/2023/03/10/effective-stl/effective-stl-21/</id>
    <published>2023-03-10T21:05:20.000Z</published>
    <updated>2023-07-20T07:03:39.354Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Item 21: Always have comparison functions return false for equal values.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;严格弱序-strict-weak-ordering&quot;&gt;&lt;a href=&quot;#严格弱序-strict-weak-ordering&quot; class=&quot;headerlink&quot; title=&quot;严格弱序( strict weak ordering )&quot;&gt;&lt;/a&gt;严格弱序( &lt;code&gt;strict weak ordering&lt;/code&gt; )&lt;/h1&gt;&lt;p&gt;先补充下严格弱序的概念: 对两个变量 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;x &amp;gt; y&lt;/code&gt; 等同于 &lt;code&gt;y &amp;lt; x&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x == y&lt;/code&gt; 等同于 &lt;code&gt;!(x &amp;lt; y) &amp;amp;&amp;amp; !(x &amp;gt; y)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要想严格弱序，就需要遵循如下规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每个变量值必须等于其本身（&lt;code&gt;irreflexivity&lt;/code&gt;）：&lt;code&gt;x &amp;lt; x&lt;/code&gt; 永远不能为 &lt;code&gt;true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;不对称性（&lt;code&gt;asymmetry&lt;/code&gt;）：如果 &lt;code&gt;x &amp;lt; y&lt;/code&gt;，那么 &lt;code&gt;y &amp;lt; x&lt;/code&gt; 就不能为 &lt;code&gt;true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;有序性必须可传递性：如果 &lt;code&gt;x &amp;lt; y&lt;/code&gt; 并且 &lt;code&gt;y &amp;lt; z&lt;/code&gt;，那么 &lt;code&gt;x &amp;lt; z&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;值相同必须具有可传递性：如果 &lt;code&gt;x == y&lt;/code&gt; 并且 &lt;code&gt;y == z&lt;/code&gt;，那么 &lt;code&gt;x == z&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Effective-STL" scheme="https://yngty.github.io/categories/Effective-STL/"/>
    
    
    <category term="C++" scheme="https://yngty.github.io/tags/C/"/>
    
    <category term="Effective-STL" scheme="https://yngty.github.io/tags/Effective-STL/"/>
    
    <category term="stl" scheme="https://yngty.github.io/tags/stl/"/>
    
  </entry>
  
  <entry>
    <title>Mach-O 相关记录</title>
    <link href="https://yngty.github.io/2023/03/10/macos/mach-o/"/>
    <id>https://yngty.github.io/2023/03/10/macos/mach-o/</id>
    <published>2023-03-10T11:14:12.000Z</published>
    <updated>2023-07-20T07:03:39.354Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;h1 id=&quot;结构&quot;&gt;&lt;a href=&quot;#结构&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="MacOS" scheme="https://yngty.github.io/categories/MacOS/"/>
    
    
    <category term="Mach-O" scheme="https://yngty.github.io/tags/Mach-O/"/>
    
  </entry>
  
  <entry>
    <title>Reactor pattern</title>
    <link href="https://yngty.github.io/2023/03/06/design/reactor-pattern/"/>
    <id>https://yngty.github.io/2023/03/06/design/reactor-pattern/</id>
    <published>2023-03-06T10:40:59.000Z</published>
    <updated>2023-07-20T07:03:39.354Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;什么是Reactor模式&quot;&gt;&lt;a href=&quot;#什么是Reactor模式&quot; class=&quot;headerlink&quot; title=&quot;什么是Reactor模式&quot;&gt;&lt;/a&gt;什么是Reactor模式&lt;/h1&gt;&lt;h1 id=&quot;Reactor模式结构&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="Design" scheme="https://yngty.github.io/categories/Design/"/>
    
    
    <category term="Reactor" scheme="https://yngty.github.io/tags/Reactor/"/>
    
  </entry>
  
  <entry>
    <title>Effective-STL 9：慎重选择删除元素的方法</title>
    <link href="https://yngty.github.io/2023/02/16/effective-stl/effective-stl-9/"/>
    <id>https://yngty.github.io/2023/02/16/effective-stl/effective-stl-9/</id>
    <published>2023-02-16T15:11:25.000Z</published>
    <updated>2023-07-20T07:03:39.354Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Item9. Choose carefully among easing options.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;一、删除特定值&quot;&gt;&lt;a href=&quot;#一、删除特定值&quot; class=&quot;headerlink&quot; title=&quot;一、删除特定值&quot;&gt;&lt;/a&gt;一、删除特定值&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;对于 &lt;code&gt;vector&lt;/code&gt;、 &lt;code&gt;string&lt;/code&gt; 或 &lt;code&gt;deque&lt;/code&gt;&lt;/p&gt;
&lt;p&gt; 最好使用 &lt;code&gt;erase-remove&lt;/code&gt;习惯用法: &lt;/p&gt;
 &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c.&lt;span class=&quot;built_in&quot;&gt;erase&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;remove&lt;/span&gt;(c.&lt;span class=&quot;built_in&quot;&gt;begin&lt;/span&gt;(), c.&lt;span class=&quot;built_in&quot;&gt;end&lt;/span&gt;(), &lt;span class=&quot;number&quot;&gt;1963&lt;/span&gt;, c.&lt;span class=&quot;built_in&quot;&gt;end&lt;/span&gt;()));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于 &lt;code&gt;list&lt;/code&gt; 容器&lt;/p&gt;
&lt;p&gt; 直接使用 &lt;code&gt;remove&lt;/code&gt; 方法:&lt;/p&gt;
 &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c.&lt;span class=&quot;built_in&quot;&gt;remove&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1963&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于标准关联容器&lt;/p&gt;
&lt;p&gt; 直接使用 &lt;code&gt;erase&lt;/code&gt; 方法:&lt;/p&gt;
 &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c.&lt;span class=&quot;built_in&quot;&gt;erase&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1963&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Effective-STL" scheme="https://yngty.github.io/categories/Effective-STL/"/>
    
    
    <category term="C++" scheme="https://yngty.github.io/tags/C/"/>
    
    <category term="Effective-STL" scheme="https://yngty.github.io/tags/Effective-STL/"/>
    
    <category term="stl" scheme="https://yngty.github.io/tags/stl/"/>
    
  </entry>
  
  <entry>
    <title>Disk Arbitration</title>
    <link href="https://yngty.github.io/2023/02/16/macos/Disk-Arbitration/"/>
    <id>https://yngty.github.io/2023/02/16/macos/Disk-Arbitration/</id>
    <published>2023-02-16T13:38:07.000Z</published>
    <updated>2023-07-20T07:03:39.354Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;&lt;code&gt;Disk Arbitration framework&lt;/code&gt; 是一个基于 &lt;code&gt;Core Foundation&lt;/code&gt; 的低级框架。会在磁盘出现和消失时通知您的应用程序，并让您的应用程序影响该过程。借助 &lt;code&gt;Disk Arbitration&lt;/code&gt;，我们可以：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;检测何时出现新磁盘&lt;/li&gt;
&lt;li&gt;阻止挂载&lt;/li&gt;
&lt;li&gt;使用不同的标志或在不同的安装点上安装卷&lt;/li&gt;
&lt;li&gt;卸载卷&lt;/li&gt;
&lt;li&gt;观察卷的变化&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="MacOS" scheme="https://yngty.github.io/categories/MacOS/"/>
    
    
    <category term="MacOS" scheme="https://yngty.github.io/tags/MacOS/"/>
    
    <category term="Disk" scheme="https://yngty.github.io/tags/Disk/"/>
    
  </entry>
  
  <entry>
    <title>Qt 之 焦点处理</title>
    <link href="https://yngty.github.io/2023/02/15/qt/Qt-%E4%B9%8B-%E7%84%A6%E7%82%B9%E5%A4%84%E7%90%86/"/>
    <id>https://yngty.github.io/2023/02/15/qt/Qt-%E4%B9%8B-%E7%84%A6%E7%82%B9%E5%A4%84%E7%90%86/</id>
    <published>2023-02-15T17:08:09.000Z</published>
    <updated>2023-07-20T07:03:39.354Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;焦点事件&quot;&gt;&lt;a href=&quot;#焦点事件&quot; class=&quot;headerlink&quot; title=&quot;焦点事件&quot;&gt;&lt;/a&gt;焦点事件&lt;/h1&gt;&lt;p&gt;当焦点从一个 &lt;code&gt;widget&lt;/code&gt; 移动到另一个 &lt;code&gt;widget&lt;/code&gt; 时，会触发 &lt;code&gt;QFocusEvent&lt;/code&gt; 事件，这个事件会被发送给原焦点窗口和当前焦点窗口，原焦点窗口执行 &lt;code&gt;focusOutEvent()&lt;/code&gt; ，新焦点窗口执行 &lt;code&gt;focusInEvent()&lt;/code&gt;。 相关函数如下：&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;focusInEvent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(QFocusEvent *event)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;focusOutEvent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(QFocusEvent *event)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;焦点策略&quot;&gt;&lt;a href=&quot;#焦点策略&quot; class=&quot;headerlink&quot; title=&quot;焦点策略&quot;&gt;&lt;/a&gt;焦点策略&lt;/h1&gt;&lt;p&gt;只有&lt;strong&gt;可获取焦点&lt;/strong&gt;的窗口，才有机会成为焦点窗口。比如&lt;code&gt;QWidget&lt;/code&gt; 默认策略是 &lt;code&gt;Qt::NoFocus&lt;/code&gt; 所以 QWidget 默认不获取焦点。Qt提供了如下接口：&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;QWidget::setFocusPolicy&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Qt::FocusPolicy policy)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Qt" scheme="https://yngty.github.io/categories/Qt/"/>
    
    
    <category term="焦点" scheme="https://yngty.github.io/tags/%E7%84%A6%E7%82%B9/"/>
    
    <category term="Qt" scheme="https://yngty.github.io/tags/Qt/"/>
    
  </entry>
  
  <entry>
    <title>std::make_shared vs. new</title>
    <link href="https://yngty.github.io/2023/02/07/c++/std-make-shared-vs-new/"/>
    <id>https://yngty.github.io/2023/02/07/c++/std-make-shared-vs-new/</id>
    <published>2023-02-07T10:30:24.000Z</published>
    <updated>2023-07-20T07:03:39.354Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;内存分配&quot;&gt;&lt;a href=&quot;#内存分配&quot; class=&quot;headerlink&quot; title=&quot;内存分配&quot;&gt;&lt;/a&gt;内存分配&lt;/h1&gt;&lt;p&gt;&lt;code&gt;std::make_shared&lt;/code&gt; 执行&lt;strong&gt;一次&lt;/strong&gt;堆分配，而调用&lt;code&gt;std::shared_ptr&lt;/code&gt; 构造函数执行&lt;strong&gt;两次&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在一个典型的实现中 &lt;code&gt;std::shared_ptr&lt;/code&gt; 管理两个实体：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;控制块（存储元数据，如引用计数、类型擦除删除器等）&lt;/li&gt;
&lt;li&gt;被管理的对象&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;控制块是一个动态分配的对象，它包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;指向托管对象的指针或托管对象本身；&lt;/li&gt;
&lt;li&gt;删除器 (类型擦除)&lt;/li&gt;
&lt;li&gt;分配器 (类型擦除)&lt;/li&gt;
&lt;li&gt;拥有被管理对象的 &lt;code&gt;shared_ptr&lt;/code&gt;的数量&lt;/li&gt;
&lt;li&gt;引用托管对象的 &lt;code&gt;weak_ptr&lt;/code&gt; 的数量&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;std::make_shared&lt;/code&gt;执行一次堆分配，计算控制块和数据所需的总空间。在另一种情况 &lt;code&gt;std::shared_ptr&amp;lt;Obj&amp;gt;(new Obj(&amp;quot;foo&amp;quot;))&lt;/code&gt;下执行两次, &lt;code&gt;new Obj(&amp;quot;foo&amp;quot;)&lt;/code&gt;为托管数据调用堆分配，&lt;code&gt;std::shared_ptr&lt;/code&gt;构造函数为控制块执行另一个堆分配。&lt;/p&gt;</summary>
    
    
    
    <category term="C/C++" scheme="https://yngty.github.io/categories/C-C/"/>
    
    
    <category term="C++" scheme="https://yngty.github.io/tags/C/"/>
    
    <category term="智能指针" scheme="https://yngty.github.io/tags/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>在MacOS平台上符号化崩溃报告</title>
    <link href="https://yngty.github.io/2022/07/26/macos/%E5%9C%A8MacOS%E5%B9%B3%E5%8F%B0%E4%B8%8A%E7%AC%A6%E5%8F%B7%E5%8C%96%E5%B4%A9%E6%BA%83%E6%8A%A5%E5%91%8A/"/>
    <id>https://yngty.github.io/2022/07/26/macos/%E5%9C%A8MacOS%E5%B9%B3%E5%8F%B0%E4%B8%8A%E7%AC%A6%E5%8F%B7%E5%8C%96%E5%B4%A9%E6%BA%83%E6%8A%A5%E5%91%8A/</id>
    <published>2022-07-26T15:41:02.000Z</published>
    <updated>2023-07-20T07:03:39.354Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;dSYM&quot;&gt;&lt;a href=&quot;#dSYM&quot; class=&quot;headerlink&quot; title=&quot;.dSYM&quot;&gt;&lt;/a&gt;&lt;code&gt;.dSYM&lt;/code&gt;&lt;/h1&gt;&lt;p&gt;&lt;code&gt;.dSYM&lt;/code&gt; (&lt;code&gt;debugging SYMbols&lt;/code&gt;) 又称为调试符号表，是苹果为了方便调试和定位问题而使用的一种调试方案，本质上使用的是起源于贝尔实验室的 &lt;code&gt;DWARF&lt;/code&gt;（&lt;code&gt;Debugging With Attributed Record Formats&lt;/code&gt;），其在.xcarchive目录中的层次结构为：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.xcarchive&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--dSYMs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  |--Your.app.dSYM&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    |--Contents&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      |--Resources&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        |--DWARF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="MacOS" scheme="https://yngty.github.io/categories/MacOS/"/>
    
    
    <category term="MacOS" scheme="https://yngty.github.io/tags/MacOS/"/>
    
    <category term="Crash" scheme="https://yngty.github.io/tags/Crash/"/>
    
  </entry>
  
  <entry>
    <title>解决 由于没有公钥，无法验证下列签名 :NO_PUBKEY</title>
    <link href="https://yngty.github.io/2022/04/19/linux/NO_PUBKEY/"/>
    <id>https://yngty.github.io/2022/04/19/linux/NO_PUBKEY/</id>
    <published>2022-04-19T22:41:41.000Z</published>
    <updated>2023-07-20T07:03:39.354Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span</summary>
        
      
    
    
    
    <category term="Linux" scheme="https://yngty.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://yngty.github.io/tags/Linux/"/>
    
    <category term="apt" scheme="https://yngty.github.io/tags/apt/"/>
    
  </entry>
  
  <entry>
    <title>Effective C++ 28：避免返回 handles 指向对象内部成分</title>
    <link href="https://yngty.github.io/2022/04/16/effecitve-cpp/effective-cpp-28/"/>
    <id>https://yngty.github.io/2022/04/16/effecitve-cpp/effective-cpp-28/</id>
    <published>2022-04-16T21:42:47.000Z</published>
    <updated>2023-07-20T07:03:39.354Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Item28: Avoid returning “handles” to object internals.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;避免返回 &lt;code&gt;handles&lt;/code&gt; (包括 &lt;code&gt;references&lt;/code&gt; 、指针、迭代器)指向对象内部。&lt;/p&gt;</summary>
    
    
    
    <category term="Effective-C++" scheme="https://yngty.github.io/categories/Effective-C/"/>
    
    
    <category term="C++" scheme="https://yngty.github.io/tags/C/"/>
    
    <category term="Effective-C++" scheme="https://yngty.github.io/tags/Effective-C/"/>
    
  </entry>
  
  <entry>
    <title>Effective C++ 26：尽可能推迟变量的定义</title>
    <link href="https://yngty.github.io/2022/04/15/effecitve-cpp/effective-cpp-26/"/>
    <id>https://yngty.github.io/2022/04/15/effecitve-cpp/effective-cpp-26/</id>
    <published>2022-04-15T10:38:20.000Z</published>
    <updated>2023-07-20T07:03:39.354Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Item 26:Postpone variable definitions as long as possible.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;推迟变量的定义有两个好处：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;改善程序效率，减少无用的构造和析构。&lt;/li&gt;
&lt;li&gt;增加程序流程清晰度。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这条规则看似简单，但存在流程控制语句的时候容易疏忽。如：&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;string &lt;span class=&quot;title&quot;&gt;encryptPassword&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;type&quot;&gt;const&lt;/span&gt; string&amp;amp; password)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    string encrypted;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (password.&lt;span class=&quot;built_in&quot;&gt;length&lt;/span&gt;() &amp;lt; MinimumPasswordLength) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;logic_error&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;Password is too short&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    encrypted = password;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;encrypt&lt;/span&gt;(encrypted);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; encrypted;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Effective-C++" scheme="https://yngty.github.io/categories/Effective-C/"/>
    
    
    <category term="C++" scheme="https://yngty.github.io/tags/C/"/>
    
    <category term="Effective-C++" scheme="https://yngty.github.io/tags/Effective-C/"/>
    
  </entry>
  
  <entry>
    <title>Effective C++ 25：设计一个不抛异常的 swap 函数</title>
    <link href="https://yngty.github.io/2022/04/09/effecitve-cpp/effective-cpp-25/"/>
    <id>https://yngty.github.io/2022/04/09/effecitve-cpp/effective-cpp-25/</id>
    <published>2022-04-09T23:12:46.000Z</published>
    <updated>2023-07-20T07:03:39.354Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Item 25: Consider support for a non-throwing swap.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;swap&lt;/code&gt; 函数能置换两对象值，功能很重要!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;异常安全性编程&lt;/li&gt;
&lt;li&gt;处理自我赋值可能性：&lt;a href=&quot;/2021/11/01/effecitve-cpp/effective-cpp-11/&quot; title=&quot;Effective C++ 11：赋值运算符需要考虑自我赋值问题&quot;&gt;赋值运算符需要考虑自我赋值问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;std&lt;/code&gt; 的缺省基本实现如下：&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; std &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&quot;keyword&quot;&gt;typename&lt;/span&gt; T&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(T&amp;amp; a, T&amp;amp; b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;T &lt;span class=&quot;title&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(a)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        a = b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        b = temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Effective-C++" scheme="https://yngty.github.io/categories/Effective-C/"/>
    
    
    <category term="C++" scheme="https://yngty.github.io/tags/C/"/>
    
    <category term="Effective-C++" scheme="https://yngty.github.io/tags/Effective-C/"/>
    
  </entry>
  
  <entry>
    <title>Effective C++ 24：若所有参数皆需类型转换，请采用非成员函数</title>
    <link href="https://yngty.github.io/2022/04/09/effecitve-cpp/effective-cpp-24/"/>
    <id>https://yngty.github.io/2022/04/09/effecitve-cpp/effective-cpp-24/</id>
    <published>2022-04-09T22:39:25.000Z</published>
    <updated>2023-07-20T07:03:39.354Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Item 24: Declare non-member functions when type conversions should apply all parameters.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;令 &lt;code&gt;classes&lt;/code&gt; 支持隐式转换通常是糟糕的设计，但也有例外，最常见的是在建立数值类型时。 比如设计一个有理数 &lt;code&gt;class&lt;/code&gt; 允许整数隐式转换。&lt;/p&gt;</summary>
    
    
    
    <category term="Effective-C++" scheme="https://yngty.github.io/categories/Effective-C/"/>
    
    
    <category term="C++" scheme="https://yngty.github.io/tags/C/"/>
    
    <category term="Effective-C++" scheme="https://yngty.github.io/tags/Effective-C/"/>
    
  </entry>
  
  <entry>
    <title>Effective C++ 23：用非成员函数、非友元函数替换成员函数</title>
    <link href="https://yngty.github.io/2022/04/09/effecitve-cpp/effective-cpp-23/"/>
    <id>https://yngty.github.io/2022/04/09/effecitve-cpp/effective-cpp-23/</id>
    <published>2022-04-09T22:30:35.000Z</published>
    <updated>2023-07-20T07:03:39.354Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Item 23: Prefer non-member non-friend functions to member</summary>
        
      
    
    
    
    <category term="Effective-C++" scheme="https://yngty.github.io/categories/Effective-C/"/>
    
    
    <category term="C++" scheme="https://yngty.github.io/tags/C/"/>
    
    <category term="Effective-C++" scheme="https://yngty.github.io/tags/Effective-C/"/>
    
  </entry>
  
</feed>
